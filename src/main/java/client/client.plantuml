@startuml

title __CLIENT's Class Diagram__\n

  namespace client {
    class client.Board {
        {static} + offset : int
        + Board()
        + addStones()
    }
  }
  

  namespace client {
    abstract class client.BoardAbstract {
        ~ size : int
        ~ stones : Stone[][]
        + getSize()
        + getStone()
        + isEmpty()
        + setStone()
    }
  }
  

  namespace client {
    class client.Client {
        - in : BufferedReader
        - out : PrintWriter
        {static} - port : int
        - socket : Socket
        ~ makeMove()
        ~ markTerritory()
        ~ pass()
        ~ play()
        ~ sendMessage()
        ~ setConnection()
        ~ setController()
        ~ surrender()
        ~ territoryAgree()
        ~ territoryDisagree()
        - handleResponse()
    }
  }
  

  namespace client {
    enum ColorEnum {
      BLACK
      EMPTY
      EMPTY_BLACK
      EMPTY_WHITE
      WHITE
    }
  }
  

  namespace client {
    class client.Main {
        ~ textFieldIP : TextField
        - buttonAgree : Button
        - buttonDisagree : Button
        - buttonPass : Button
        {static} - mainController : MainController
        - primaryStage : Stage
        {static} + main()
        + start()
        ~ endGame()
        ~ endGameSurrender()
        ~ setAgreementVisibility()
        ~ startGame()
        - joinGame()
        - showEndMessage()
    }
  }
  

  namespace client {
    class client.MainController {
        ~ MainController()
        ~ createBoard()
        ~ drawBoard()
        ~ endGame()
        ~ endGameSurrender()
        ~ getBoard()
        ~ getColor()
        ~ getState()
        ~ makeMove()
        ~ pass()
        ~ setColor()
        ~ setState()
        ~ startAgreeing()
        ~ startClient()
        ~ startGame()
        ~ stopAgreeing()
        ~ surrender()
        ~ territoryAgree()
        ~ territoryDisagree()
        - drawBackground()
        - drawLines()
        - drawStones()
    }
  }
  

  namespace client {
    enum PlayerState {
      AGREEING
      NO_ENEMY
      PASSED
      PLAYING
    }
  }
  

  namespace client {
    class client.Stone {
        {static} + radius : int
        - x : int
        - y : int
        + Stone()
        + Stone()
        + getColor()
        + getX()
        + getY()
        + repaint()
        + setColor()
        + setX()
        + setY()
    }
  }
  

  client.Board -up-|> client.BoardAbstract
  client.BoardAbstract -up-|> javafx.scene.Group
  client.Client o-- client.MainController : mainController
  client.Main -up-|> javafx.application.Application
  client.MainController o-- client.Board : board
  client.MainController o-- client.Client : client
  client.MainController o-- client.Main : main
  client.MainController o-- client.ColorEnum : playerColor
  client.MainController o-- client.PlayerState : state
  client.Stone -up-|> javafx.scene.shape.Circle
  client.Stone o-- client.ColorEnum : color


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
